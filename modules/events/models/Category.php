<?php
/**
 * Created by PhpStorm.
 * User: ivan
 * Date: 02.04.19
 * Time: 14:22
 */

namespace app\modules\events\models;

use app\modules\languages\models\Languages;
use mtemplate\mclasses\LanguageActiveRecord;
use Yii;
use yii\behaviors\SluggableBehavior;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;
use yii\db\Expression;

/**
 * This is the model class for table "categories".
 *
 * @property integer $id
 * @property integer $lang_id
 * @property string $title
 * @property integer $is_active
 * @property string $created_at
 * @property string $updated_at
 * @property string $slug
 *
 * @property Languages $language
 *
 * @property Event[] $events
 * @property EventCategory[] $eventCategories;
 */
class Category extends LanguageActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'categories';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title', 'slug'], 'required'],
            [['is_active'], 'integer'],
            [['title'], 'string', 'max' => 255],
            [['slug'], 'string']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('admin', 'ID'),
            'title' => Yii::t('admin', 'Название'),
            'is_active' => Yii::t('admin', 'Активность'),
            'lang_id' => Yii::t('admin', 'Язык'),
            'created_at' => Yii::t('admin', 'Дата создания'),
            'updated_at' => Yii::t('admin', 'Дата обновления'),
            'slug' => Yii::t('admin', 'ЧПУ')
        ];
    }

    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::class,
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => ['created_at', 'updated_at'],
                    ActiveRecord::EVENT_BEFORE_UPDATE => ['updated_at']
                ],
                'value' => new Expression('NOW()'),
            ],
            [
                'class' => SluggableBehavior::class,
                'attribute' => 'title'
            ]
        ];
    }

    public function getLanguage()
    {
        return $this->hasOne(Languages::tableName(), ['id' => 'lang_id']);
    }

    public static function find()
    {
        $query = new CategoryQuery(get_called_class());

        return $query->setLanguage();
    }

    public static function getSelect2Categories()
    {
        $result = [];

        $categories = self::find()->active()->orderDate()->all();

        foreach ($categories as $item) {
            $result[$item->id] = $item->title;
        }

        return $result;
    }

    public function getEvents()
    {
        return $this->hasMany(Event::class, ['id' => 'event_id'])
            ->viaTable('events_categories', ['category_id' => 'id']);
    }

    public function getEventCategories()
    {
        return $this->hasMany(EventCategory::class, ['category_id' => 'id']);
    }

    public function beforeDelete()
    {
        if ($this->events) {
            foreach ($this->events as $item) {
                $item->delete();
            }
        }

        if ($this->eventCategories) {
            foreach ($this->eventCategories as $eventCategory) {
                $eventCategory->delete();
            }
        }

        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }
}