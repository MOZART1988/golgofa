<?php
/**
 * Created by PhpStorm.
 * User: wfwda
 * Date: 14.04.2019
 * Time: 23:48
 */

namespace app\modules\basepage\models;

use mtemplate\mclasses\ActiveRecord;
use Yii;
use app\modules\languages\models\Languages;
use mtemplate\mclasses\LanguageActiveRecord;
use yii\behaviors\TimestampBehavior;
use yii\db\Expression;

/**
 * This is the model class for table "slides".
 *
 * @property integer $id
 * @property integer $lang_id
 * @property string $title
 * @property string $text
 * @property integer $is_active
 * @property string $created_at
 * @property string $updated_at
 * @property integer $is_main_event
 * @property integer $is_new_page
 * @property string $link
 * @property integer $position
 *
 * @property Languages $language
 * @property Slides $next
 * @property Slides $prev
 */
class Slides extends LanguageActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'slides';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title', 'link'], 'required'],
            [['is_active', 'is_main_event', 'is_new_page', 'position'], 'integer'],
            [['title', 'text'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('admin', 'ID'),
            'title' => Yii::t('admin', 'Название'),
            'is_active' => Yii::t('admin', 'Активность'),
            'text' => Yii::t('admin', 'Текст'),
            'lang_id' => Yii::t('admin', 'Язык'),
            'created_at' => Yii::t('admin', 'Дата создания'),
            'updated_at' => Yii::t('admin', 'Дата обновления'),
            'is_new_page' => Yii::t('admin', 'Открывать в новой вкладке'),
            'is_main_event' => Yii::t('admin', 'Главное событие'),
            'link' => Yii::t('admin', 'Ссылка'),
            'position' => Yii::t('admin', 'Позиция')
        ];
    }

    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::class,
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => ['created_at', 'updated_at'],
                    ActiveRecord::EVENT_BEFORE_UPDATE => ['updated_at']
                ],
                'value' => new Expression('NOW()'),
            ],
        ];
    }

    public static function find()
    {
        $query = new SlidesQuery(get_called_class());

        return $query->setLanguage();
    }

    public function getLanguage()
    {
        return $this->hasOne(Languages::tableName(), ['id' => 'lang_id']);
    }

    public function beforeSave($insert)
    {

        if ($insert) {
            $this->position = time() + 1;
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function getNext()
    {
        return self::find()->where(['>', 'position', $this->position])->one();
    }

    public function getPrev()
    {
        return self::find()->where(['<', 'position', $this->position])->orderBy('position DESC')->one();
    }
}