<?php

namespace app\modules\gallery\models;

use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;
use yii\db\Expression;

/**
 * This is the model class for table "gallery_images".
 *
 * @property integer $id
 * @property integer $gallery_id
 * @property string $title
 * @property string $filename
 * @property integer $position
 * @property integer $is_active
 * @property string $created_at
 * @property string $update_at
 * @property string $uploadUrl
 * @property string $thumbUrl
 *
 * @property Gallery $gallery
 */
class GalleryImages extends ActiveRecord
{


    public $imageFile;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'gallery_images';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['gallery_id'], 'required'],
            [['description'], 'string'],
            [['gallery_id', 'position', 'is_active'], 'integer'],
            [['filename'], 'string', 'max' => 255]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('admin', 'ID'),
            'gallery_id' => Yii::t('admin', 'Галерея'),
            'title' => Yii::t('admin', 'Заголовок'),
            'description' => Yii::t('admin', 'Описание'),
            'position' => Yii::t('admin', 'Позиция'),
            'is_active' => Yii::t('admin', 'Активность'),
            'created_at' => Yii::t('admin', 'Дата создания'),
            'updated_at' => Yii::t('admin', 'Дата обновления'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGallery()
    {
        return $this->hasOne(Gallery::class, ['id' => 'gallery_id']);
    }

    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::class,
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => ['created_at', 'updated_at'],
                    ActiveRecord::EVENT_BEFORE_UPDATE => ['updated_at']
                ],
                'value' => new Expression('NOW()'),
            ],
        ];
    }

    public function beforeDelete()
    {
        if (!empty($this->filename)) {
            @unlink(\Yii::getAlias('@webroot') . '/media/gallery/' . $this->gallery->id . '/' . $this->filename );
            @unlink(\Yii::getAlias('@webroot') . '/media/gallery/' . $this->gallery->id . '/_357_250_' . $this->filename );
        }

        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function getUploadUrl()
    {
        return '/media/gallery/' . $this->gallery->id . '/' . $this->filename;
    }

    public function getThumbUrl()
    {
        return '/media/gallery/' . $this->gallery->id . '/_357_250_' . $this->filename;
    }

}
