<?php
/**
 * Created by PhpStorm.
 * User: wfwda
 * Date: 07.04.2019
 * Time: 18:16
 */

namespace app\modules\content\front\controllers;


use app\modules\content\models\Contacts;
use app\modules\content\models\Content;
use app\modules\content\models\Donation;
use app\modules\content\models\forms\ContactForm;
use app\modules\content\models\Projects;
use app\modules\content\models\Scedules;
use app\modules\languages\models\Languages;
use mtemplate\mcontrollers\MBTController;
use yii\web\NotFoundHttpException;
use yii\web\Response;

class DefaultController extends MBTController
{
    public function beforeAction($action)
    {
        $this->layout = '//front/content';
        $this->enableCsrfValidation = false;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * @throws NotFoundHttpException
    */
    public function actionIndex($slug)
    {
        $model = Content::find()->where(['slug' => $slug])->one();

        if ($model === null) {
            throw new NotFoundHttpException();
        }

        $this->setMeta(
            $model->meta_title ? $model->meta_title : $model->title,
            $model->meta_description ? $model->meta_description : $model->text,
            $model->meta_keywords
        );

        return $this->render('index', ['model' => $model]);
    }

    public function actionProjects()
    {
        $models = Projects::find()->active()->all();

        if (!$models) {
            throw new NotFoundHttpException();
        }

        $this->setMeta(\Yii::t('front', 'Наши проекты'));

        return $this->render('projects', ['models' => $models]);
    }

    public function actionContacts()
    {
        $model = Contacts::find()->one();


        if ($model === null) {
            throw new NotFoundHttpException();
        }

        $form = new ContactForm();

        if (\Yii::$app->request->isAjax && \Yii::$app->request->isPost && $form->load(\Yii::$app->request->post())) {

            $form->send();
            \Yii::$app->response->format = Response::FORMAT_JSON;

            return ['success' => true];
        }

        $scedules = [];

        foreach (Scedules::$days as $key => $value) {
            $models = Scedules::find()->active()->where(['week_day' => $key, 'lang_id' => Languages::getCurrent()->id])->orderBy(['created_at' => SORT_ASC])->all();
            if (!empty($models)) {
                $scedules[$key] = $models;
            }
        }

        $this->setMeta(
            $model->meta_title ? $model->meta_title : \Yii::t('front', 'Контакты'),
            $model->meta_description ? $model->meta_description : \Yii::t('front', 'Контакты'),
            $model->meta_keywords
        );

        return $this->render('contacts',  ['model' => $model, 'scedules' => $scedules]);
    }

    public function actionDonation()
    {
        $model = Donation::find()->active()->one();

        if ($model === null) {
            throw new NotFoundHttpException();
        }

        $this->setMeta(
            $model->meta_title ? $model->meta_title : \Yii::t('front', 'Поддержать нас'),
            $model->meta_description ? $model->meta_description : \Yii::t('front', 'Поддержать нас'),
            $model->meta_keywords
        );

        return $this->render('donation', ['model' => $model]);

    }
}